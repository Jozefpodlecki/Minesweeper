{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/minesweeper-service/minesweeper.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","signature","Date","getFullYear","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","$event","preventDefault","GameState","GameComponent","_minesweeperService","faBomb","faFlag","faSyncAlt","faSmile","faFrown","initialize","disabled","state","loading","initializeBoard","board","game","cell","isRevealed","hasBomb","bombCount","isFlagged","gameOver","cells","uncoverNeighbors","checkIfGameOver","allRevealed","some","allFlagged","won","event","setTimeout","lost","opacity","animations","environment","production","bootstrapModule","err","console","error","MinesweeperService","getNeighbors","row","column","computeNeighbors","relativeNeighbors","neighbors","filter","pr","map","find","checkedNeighbors","result","firstCell","pop","isChecked","length","reject","rows","columns","Array","fill","index","Math","floor","Boolean","random","computedNeighbors","reduce","acc","Number","providedIn"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GameComponent } from './game/game.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: GameComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n\n  signature: string;\n\n  constructor() {\n    this.signature = `Józef Podlecki ${new Date().getFullYear()}`\n  }\n}\n","<div class=\"background\"></div>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<footer class=\"footer\">\r\n    <div class=\"footer__signature\">{{signature}}</div>\r\n    <div class=\"footer__social\"></div>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\nimport { MinesweeperService } from '../minesweeper-service/minesweeper.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule\n  ],\n  providers: [MinesweeperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { faBomb, faFlag, faSyncAlt, faSmile, faFrown } from '@fortawesome/free-solid-svg-icons';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Cell } from 'src/models/Cell';\nimport { MinesweeperService } from 'src/minesweeper-service/minesweeper.service';\n\nenum GameState {\n  game,\n  won,\n  lost,\n  loading\n}\n\n@Component({\n  selector: 'game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.less'],\n  animations: [\n    trigger('enterTrigger', [\n      //transition(':leave', [style({opacity: '0'}), animate('1500ms')]),\n      transition('void => *', [style({opacity: '0'}), animate('1500ms')])\n    ])\n  ]\n})\nexport class GameComponent implements OnInit {\n  faBomb = faBomb;\n  faFlag = faFlag;\n  faSyncAlt = faSyncAlt;\n  faSmile = faSmile;\n  faFrown = faFrown;\n\n  board: Cell[];\n  state: GameState;\n  disabled: boolean;\n  GameState = GameState;\n\n  constructor(private _minesweeperService: MinesweeperService) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.disabled = true;\n    this.state = GameState.loading;\n    \n    this._minesweeperService.initializeBoard().then(board => {\n      this.board = board;\n      this.state = GameState.game;\n      this.disabled = false;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  computeState(cell: any) {\n    if(cell.isRevealed) {\n      if(cell.hasBomb) {\n        return 'bomb'\n      }\n      if(cell.bombCount) {\n        return 'count'\n      }\n      return 'revealed'\n    }\n    if(cell.isFlagged) {\n      return 'flag'\n    }\n    return 'unrevealed'\n  }\n\n  click(cell: Cell) {\n    cell.isRevealed = true;\n    \n    if(cell.hasBomb) {\n      this.gameOver();\n      return;\n    }\n\n    if(!cell.bombCount) {\n      const cells = this._minesweeperService.uncoverNeighbors(this.board, cell);\n\n      for(let cell of cells) {  \n        cell.isRevealed = true;\n      }\n    }\n\n    this.checkIfGameOver();\n  }\n\n  checkIfGameOver() {\n    const allRevealed = this.board.some(({isRevealed}) => isRevealed === true);\n    const allFlagged = !this.board.some(({hasBomb, isFlagged}) => hasBomb !== isFlagged);\n\n    if(allFlagged && allRevealed) {\n      this.state = GameState.won;\n    }\n  }\n\n  onRightClick(cell: Cell, event: MouseEvent) {\n    cell.isFlagged = !cell.isFlagged;\n    this.checkIfGameOver();\n    event.preventDefault();\n  }\n\n  gameOver() {\n    this.disabled = true;\n    for(let cell of this.board) {\n      cell.isRevealed = true;\n    }\n    setTimeout(() => {\n      this.state = GameState.lost;\n    }, 1000)\n  }\n\n}\n","<div class=\"game__header\">Minesweeper</div>\n<div [ngSwitch]=\"state\" class=\"game\">\n    <div [@enterTrigger]=\"'loading'\" class=\"game__loading\" *ngSwitchCase=\"GameState.loading\">\n        <div>Loading</div>\n        <div>\n            <fa-icon [icon]=\"faBomb\" size=\"2x\"></fa-icon>\n            <fa-icon [icon]=\"faBomb\" size=\"2x\"></fa-icon>\n            <fa-icon [icon]=\"faBomb\" size=\"2x\"></fa-icon>\n        </div>\n    </div>\n    <div [@enterTrigger]=\"'game'\" *ngSwitchCase=\"GameState.game\" [class.game__grid--disabled]=\"disabled\" class=\"game__grid\">\n        <div [ngSwitch]=\"computeState(cell)\" class=\"game__cell\" (click)=\"click(cell)\" (contextmenu)=\"onRightClick(cell, $event)\" *ngFor=\"let cell of board\">\n            <div class=\"number\" *ngSwitchCase=\"'count'\" [@enterTrigger]=\"'number'\">{{cell.bombCount}}</div>\n            <fa-icon *ngSwitchCase=\"'bomb'\" [icon]=\"faBomb\" size=\"2x\" [@enterTrigger]=\"'bomb'\"></fa-icon>\n            <fa-icon *ngSwitchCase=\"'flag'\" [icon]=\"faFlag\" size=\"2x\"></fa-icon>\n            <div class=\"revealed\" *ngSwitchCase=\"'revealed'\" [@enterTrigger]=\"'revealed'\"></div>\n        </div>\n    </div>\n    <div (contextmenu)=\"$event.preventDefault()\" [@enterTrigger]=\"'won'\" class=\"game__statusWrapper\" *ngSwitchCase=\"GameState.won\">\n        <div class=\"game__status\">\n            <span class=\"game__statusHeader\">You won</span>\n            <fa-icon [icon]=\"faSmile\" size=\"4x\"></fa-icon>\n        </div>\n        <div (contextmenu)=\"initialize()\" class=\"game__playAgain\">\n            <span class=\"game__playAgainText\">Play again</span>\n            <fa-icon [icon]=\"faBomb\" size=\"2x\"></fa-icon>\n        </div>\n    </div>\n    <div (click)=\"$event.preventDefault()\" [@enterTrigger]=\"'lost'\" class=\"game__statusWrapper\" *ngSwitchCase=\"GameState.lost\">\n        <div class=\"game__status\">\n            <div class=\"game__statusHeader\">You lost</div>\n            <fa-icon [icon]=\"faFrown\" size=\"4x\"></fa-icon>\n        </div>\n        <div (click)=\"initialize()\" class=\"game__playAgain\">\n            <span class=\"game__playAgainText\">Play again</span>\n            <fa-icon [icon]=\"faBomb\" size=\"2x\"></fa-icon>\n        </div>\n    </div>\n</div>\n<div class=\"actions\">\n    <div (click)=\"gameOver()\" class=\"actions__give-up\" [class.actions__give-up--disabled]=\"state !== GameState.game\" >I give up</div>\n    <div class=\"actions__reset\" (click)=\"initialize()\">\n        <fa-icon [icon]=\"faSyncAlt\" size=\"2x\"></fa-icon>\n    </div>\n</div>","export const environment = {\n  production: false\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Inject } from \"@angular/core\";\r\nimport { Cell } from 'src/models/Cell';\r\n\r\n@Inject({\r\n    providedIn: 'root'\r\n})\r\nexport class MinesweeperService {\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    getNeighbors = (row, column) => {\r\n        return [\r\n          {\r\n            row: row - 1,\r\n            column: column\r\n          },\r\n          {\r\n            row: row - 1,\r\n            column: column -1\r\n          },\r\n          {\r\n            row: row - 1,\r\n            column: column + 1\r\n          },\r\n          {\r\n            row: row + 1,\r\n            column\r\n          },\r\n          {\r\n            row: row + 1,\r\n            column: column - 1\r\n          },\r\n          {\r\n            row: row + 1,\r\n            column: column + 1\r\n          },\r\n          {\r\n            row,\r\n            column: column - 1\r\n          },\r\n          {\r\n            row,\r\n            column: column + 1\r\n          }\r\n        ]\r\n      }\r\n      \r\n      initializeBoard() {\r\n        return new Promise<Cell[]>((resolve, reject) => {\r\n          const rows = 10;\r\n          const columns = 10;\r\n        \r\n          let board = Array(rows * columns).fill(0).map((pr, index) => {\r\n            \r\n            return {\r\n              id: index,\r\n              row: Math.floor(index / rows),\r\n              column: index % columns,\r\n              hasBomb: Boolean(Math.floor(Math.random() * 1.04)),\r\n              isFlagged: false,\r\n              isRevealed: false,\r\n              bombCount: 0\r\n            }\r\n          });\r\n        \r\n          board = board.map(pr => {\r\n            const computedNeighbors = this.getNeighbors(pr.row, pr.column);\r\n            let bombCount = null;\r\n        \r\n            if (!pr.hasBomb) {\r\n              bombCount = board.filter(cell => computedNeighbors\r\n                .some(pr => pr.row === cell.row && pr.column === cell.column))\r\n                  .reduce((acc, cell) => acc + Number(cell.hasBomb), 0)\r\n            }      \r\n        \r\n            return {\r\n              ...pr,\r\n              bombCount\r\n            }\r\n          })\r\n        \r\n          resolve(board)\r\n        })\r\n      }\r\n      \r\n      computeNeighbors = (board: Cell[], cell: Cell) => {\r\n        const relativeNeighbors = [{\r\n          row: cell.row,\r\n          column: cell.column + 1\r\n        },\r\n        {\r\n          row: cell.row,\r\n          column: cell.column - 1\r\n        },\r\n        {\r\n          row: cell.row + 1,\r\n          column: cell.column\r\n        },\r\n        {\r\n          row: cell.row - 1,\r\n          column: cell.column\r\n        }];\r\n      \r\n        const neighbors = board.filter(cell => relativeNeighbors.some(pr => pr.column === cell.column && pr.row === cell.row));\r\n      \r\n        return neighbors.map(pr => board\r\n          .find(cell => cell.row === pr.row && cell.column === pr.column));\r\n      }\r\n      \r\n      uncoverNeighbors = (board: Cell[], cell: Cell) => {\r\n        let neighbors = this.computeNeighbors(board, cell);\r\n        let checkedNeighbors: Cell[] = [];\r\n        let result = [];\r\n      \r\n        while(neighbors.length) {\r\n          const firstCell = neighbors.pop();\r\n          const isChecked = checkedNeighbors.find(cell => cell.id === firstCell.id);\r\n      \r\n          if(isChecked || firstCell.hasBomb) {\r\n            continue;\r\n          }\r\n      \r\n          if(!firstCell.bombCount) {\r\n            neighbors = [...neighbors, ...this.computeNeighbors(board, firstCell)];\r\n          }\r\n      \r\n          checkedNeighbors = [...checkedNeighbors, firstCell];\r\n          result = [...result, firstCell];\r\n        }\r\n        return result;\r\n      }\r\n}"]}